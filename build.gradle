plugins {
	id 'org.springframework.boot' version '2.5.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'checkstyle'
	id 'pmd'
	id "com.github.spotbugs" version "4.7.1"
	id 'org.asciidoctor.jvm.convert' version '3.3.0'
}

group = 'com.adverity'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '8'

task checkstyle(type: Checkstyle) {
	source 'src/main/java'
	include '**/*.java'
	exclude '**/gen/**'

	classpath = files()
}

tasks.withType(Pmd){
	reports{
		xml.enabled=true
		html.enabled=true
	}
}
pmd {
	ignoreFailures = true
	pmdTest.enabled=false
}

repositories {
	mavenCentral()
}

configurations {
	asciidoctorExtensions
}

ext {
	set('snippetsDir', file('build/generated-snippets'))
	set('springRestdocsVersion', '2.0.5.RELEASE')
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.projectlombok:lombok:1.18.18'
	implementation 'org.apache.commons:commons-csv:1.8'
	implementation 'org.hibernate:hibernate-core:5.5.3.Final'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	runtimeOnly 'com.h2database:h2'
	compileOnly 'org.projectlombok:lombok:1.18.20'
	annotationProcessor 'org.projectlombok:lombok:1.18.20'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group :'junit', module: 'junit'
	}

	testImplementation 'org.mockito:mockito-core:3.11.2'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.0'
	testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
	testImplementation "org.springframework.restdocs:spring-restdocs-webtestclient:${springRestdocsVersion}"
	testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc:${springRestdocsVersion}"
	asciidoctorExtensions "org.springframework.restdocs:spring-restdocs-asciidoctor:${springRestdocsVersion}"
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

task publishAsciidoc(type: Copy) {
	from 'build/docs/asciidoc'
	into 'docs'
}

asciidoctor {
	configurations 'asciidoctorExtensions'
	dependsOn test
	finalizedBy publishAsciidoc
	attributes 'snippets': snippetsDir
	inputs.dir snippetsDir
	sources {
		include '**/index.adoc'
	}
	baseDirFollowsSourceFile()

	attributes \
        'build-gradle': file('build.gradle'),
			'sourcedir': project.sourceSets.main.java.srcDirs[0],
			'toc': 'left',
			'icons': 'font',
			'setanchors': '',
			'idprefix': '',
			'idseparator': '-',
			'docinfo': 'shared'
}

bootJar {
	dependsOn asciidoctor
	from("${asciidoctor.outputDir}") {
		into 'static/docs'
	}
}
